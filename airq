Perform the following operations using ‘python’ Language on the Air quality dataset.
1) Data cleaning
2) Data integration
3) Data transformation
4) Data model Building
______________________________________________________________________________________________
import pandas as pd
import numpy as np
from sklearn.impute import SimpleImputer
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, MinMaxScaler, Binarizer
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt

# Load datasets
df = pd.read_csv("air.csv")
df1 = pd.read_csv("student.csv")

# Explore air.csv dataset
df.shape
df.head()
df.count()
df.isnull().sum()
df.info()

# Handle missing values
A = df.dropna()
A.shape

A = df.fillna(0)
A.shape

A = df.fillna(method='pad')  # Forward fill
A.head(10)

A = df.fillna(method='backfill')  # Backward fill
A.head(8)

# Replace NaN with mean and median for Ozone column
A = df['Ozone'].replace(np.nan, df['Ozone'].mean())
A.head(10)

A = df['Ozone'].replace(np.nan, df['Ozone'].median())
A.head()

# Impute missing values using SimpleImputer
imp = SimpleImputer(missing_values=np.nan, strategy='mean')
A = imp.fit_transform(df)
A = pd.DataFrame(A, columns=df.columns)
A.head()

imp = SimpleImputer(missing_values=np.nan, strategy='most_frequent')
A = imp.fit_transform(df)
A = pd.DataFrame(A, columns=df.columns)
A.head()

# Train-test split
train, test = train_test_split(A)
len(train)
train.head()

train, test = train_test_split(A, test_size=0.20)
len(test)
len(train)

# Descriptive statistics
A.describe()

# StandardScaler
scaler = StandardScaler()
B = scaler.fit_transform(A)
pd.DataFrame(B).describe()

# MinMaxScaler
scaler = MinMaxScaler()
B = scaler.fit_transform(A)
pd.DataFrame(B).describe()

# Binarizer
bin = Binarizer(threshold=0.5)
B = bin.fit_transform(B)
pd.DataFrame(B)

# Label encoding for student.csv
data = pd.read_csv("Student.csv")
le = LabelEncoder()
B = le.fit_transform(data['class'])
B

# Linear Regression
X = A['Ozone'].values
X = X.reshape(-1, 1)
Y = A['Temp']
model = LinearRegression()
model.fit(X, Y)
model.score(X, Y) * 100
model.predict([[128]])

# Scatter plot
plt.scatter(X, Y)
plt.show()

# Data integration
data.columns = data.columns.str.strip()
combined = pd.concat([df, data[['roll']]], axis=1)

df1.columns = df1.columns.str.strip()
combined = pd.concat([df, df1[['roll']]], axis=1)
combined.head(6)
